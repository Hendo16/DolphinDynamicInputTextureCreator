<UserControl x:Class="DolphinDynamicInputTextureCreator.Controls.PanZoom"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:data="clr-namespace:DolphinDynamicInputTexture.Data;assembly=DolphinDynamicInputTexture"
             xmlns:controls="clr-namespace:DolphinDynamicInputTextureCreator.Controls"
             xmlns:converters="clr-namespace:DolphinDynamicInputTextureCreator.ValueConverters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:ScaleFactorToPercentageValueConverter x:Key="ScaleFactorToPercentageValueConverter"/>
        <converters:PathToImageValueConverter x:Key="PathToImageValueConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ConverterCombinationConverter x:Key="InvertBoolToVis">
            <converters:InvertBoolConverter />
            <BooleanToVisibilityConverter />
        </converters:ConverterCombinationConverter>
        <converters:BoolToSolidColorBrushConverter x:Key="BoolToMainColorBrushConverter" FalseValue="White" TrueValue="#242424"/>
        <converters:BoolToSolidColorBrushConverter x:Key="BoolToSecondaryColorBrushConverter" FalseValue="#b9b9b9" TrueValue="#373737"/>
        <converters:BoolToColorConverter x:Key="BoolToResizerColorBrushConverter" FalseValue="Black" TrueValue="LightBlue"/>
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem Header="Delete" Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:PanZoom}},
                                              Path=DataContext.InputPack.DeleteSelectedRegionCommand}" CommandParameter="{Binding}" Icon="{StaticResource Icon.Delete}" />
        </ContextMenu>
        <DataTemplate DataType="{x:Type data:RectRegion}">
            <Grid>
                <Grid.Background>
                    <SolidColorBrush Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:PanZoom}},
                        Path=DataContext.InputPack.SelectedRegionBrush.UseDarkBackground, NotifyOnTargetUpdated=True,
Converter={StaticResource BoolToResizerColorBrushConverter}}" Opacity="0.25" />
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="8*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Path Grid.RowSpan="2" x:Name="Path" StrokeThickness="2" Stroke="Black"
                  Stretch="Fill">
                    <Path.Data>
                        <RectangleGeometry Rect="0,0,10,10"/>
                    </Path.Data>
                </Path>
                <Viewbox Grid.Row="0">
                    <StackPanel>
                        <Label Content="{Binding Device.Name, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontWeight="Bold">
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="4" Color="Black"/>
                            </Label.Effect>
                        </Label>
                        <Label Content="{Binding Key.Name, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontWeight="Bold">
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="4" Color="Black"/>
                            </Label.Effect>
                        </Label>
                    </StackPanel>
                </Viewbox>
                <Viewbox Grid.Row="1" >
                    <StackPanel Orientation="Horizontal" Margin="1,0">
                        <Label  Content="{Binding X, Mode=OneWay}" ContentStringFormat="0.#" Foreground="White" Padding="0" >
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="Black"/>
                            </Label.Effect>
                        </Label>
                        <Label Content="{Binding Y, Mode=OneWay}" ContentStringFormat="0.#" Foreground="White" Padding="6,0" >
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="Black"/>
                            </Label.Effect>
                        </Label>
                        <Label Content="{Binding Width, Mode=OneWay}"  ContentStringFormat="0.#" Foreground="White"  Padding="0">
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="Black"/>
                            </Label.Effect>
                        </Label>
                        <Label Content="x" Foreground="White"  Padding="1,0">
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="Black"/>
                            </Label.Effect>
                        </Label>
                        <Label Content="{Binding Height, Mode=OneWay}" ContentStringFormat="0.#" Foreground="White"  Padding="0">
                            <Label.Effect>
                                <DropShadowEffect ShadowDepth="0" BlurRadius="2" Color="Black"/>
                            </Label.Effect>
                        </Label>
                    </StackPanel>
                </Viewbox>
                <controls:Resizer Grid.RowSpan="2" Visibility="Collapsed"
                                  X="{Binding ScaledX}" Y="{Binding ScaledY}"
                                  ItemWidth="{Binding ScaledWidth}"
                                  ItemHeight="{Binding ScaledHeight}"
                                  x:Name="Resizer"/>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                    <Setter TargetName="Resizer" Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style TargetType="ListBox" x:Key="RectRegionListBoxStyle">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <Canvas/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ItemsPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBoxItem" x:Key="RectRegionItemStyle">
            <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
            <Setter Property="Canvas.Left" Value="{Binding ScaledX}"/>
            <Setter Property="Canvas.Top" Value="{Binding ScaledY}"/>
            <Setter Property="Height" Value="{Binding ScaledHeight}"/>
            <Setter Property="Width" Value="{Binding ScaledWidth}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter ContentSource="Content"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding InputPack.Textures.ValidSelection, Converter={StaticResource BoolToVis}}">
            <ScrollViewer VerticalScrollBarVisibility="Visible"
                  HorizontalScrollBarVisibility="Visible" x:Name="scr"
                  ScrollChanged="ScrollChanged" Background="DarkGray">
                <Grid MouseDown="Grid_MouseDown" MouseUp="Grid_MouseUp" MouseMove="Grid_MouseMove" MouseWheel="Grid_MouseWheel">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid>
                            <Grid.Background>
                                <DrawingBrush TileMode="Tile" Viewport="0,0,2,2" 
                                      ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="{Binding InputPack.SelectedRegionBrush.UseDarkBackground, Converter={StaticResource BoolToMainColorBrushConverter}}" Geometry="M0,0 L0,0 0,10 10,10 10,0 Z"/>
                                            <GeometryDrawing Brush="{Binding InputPack.SelectedRegionBrush.UseDarkBackground, Converter={StaticResource BoolToSecondaryColorBrushConverter}}" Geometry="M0,0 L0,0 0,5, 10,5 10,10 5,10 5,0 Z"/>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Grid.Background>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding InputPack.Textures.Selected.ScaleFactor}" ScaleY="{Binding InputPack.Textures.Selected.ScaleFactor}"/>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Image Source="{Binding InputPack.Textures.Selected.TexturePath, Converter={StaticResource PathToImageValueConverter}}"  Width="{Binding InputPack.Textures.Selected.ImageWidth}" Height="{Binding InputPack.Textures.Selected.ImageHeight}" Stretch="Fill" x:Name="Img" RenderOptions.BitmapScalingMode="NearestNeighbor"
                                VerticalAlignment="Top" HorizontalAlignment="Left" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            </Image>
                        </Grid>

                        <ListBox x:Name="lb" ItemsSource="{Binding InputPack.Textures.Selected.Regions}"
                                 Style="{StaticResource RectRegionListBoxStyle}"
                                 ItemContainerStyle="{StaticResource RectRegionItemStyle}"/>
                    </Grid>
                </Grid>
            </ScrollViewer>
            <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="20" Background="LightGray" Width="125" Height="50" Padding="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Row="0">
                        <TextBlock Text="Zoom = " />
                        <TextBlock Text="{Binding InputPack.Textures.Selected.ScaleFactor, Converter={StaticResource ScaleFactorToPercentageValueConverter}}" />
                    </StackPanel>
                    <Button Grid.Row="1" Content="Reset" Command="{Binding InputPack.ResetScaleFactorCommand}" />
                </Grid>
            </Border>
        </Grid>
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding InputPack.Textures.ValidSelection, Converter={StaticResource InvertBoolToVis}}">
            <TextBlock FontSize="24" TextWrapping="Wrap" TextAlignment="Center" LineHeight="50" >
                Click the <Bold>'Add Texture(s)'</Bold> buton on the left to get started. <LineBreak/>
                Once added, <Italic>double click</Italic> on a texture to begin placing emulated regions.
            </TextBlock>
        </Grid>
    </Grid>
</UserControl>
